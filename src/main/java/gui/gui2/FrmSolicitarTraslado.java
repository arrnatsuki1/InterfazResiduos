/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui.gui2;

import Excepciones.ExcedeCantidadTrasladoException;
import Excepciones.MalformedSolicitud;
import Excepciones.SolicitudExistenteException;
import fachada.Productor;
import fachada.Quimico;
import fachada.Residuo;
import fachada.ResiduoSolicitud;
import fachada.Solicitud;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.logica2.FabricaLogica;
import logica.logica2.ILogica;

/**
 *
 * @author Rosa Rodriguez
 */
public class FrmSolicitarTraslado extends javax.swing.JFrame {

    private Solicitud solicitud;
    private List<Residuo> residuos;
    
    /**
     * Creates new form FrmSolicitarTraslado
     */
    public FrmSolicitarTraslado(List<Residuo> residuos) {
        initComponents();
        solicitud = new Solicitud();
        //Cargar todos los residuos
        this.residuos = residuos;
        DefaultTableModel model = (DefaultTableModel)tablaTodos.getModel();
        for(Residuo q : residuos) {
            Object[] row = {q.getNombre()};
            model.addRow(row);
        }
        
        //Fin de la carga
        setVisible(true);
    }

    private Residuo buscarResiduoNombre(String nombre) {
        for(Residuo r : residuos) {
            if(r.getNombre().equalsIgnoreCase(nombre)){
                return r;
            }
        }
        return null;
    }
    
    private Residuo eliminarResiduoNombre(String nombre) {
        List<ResiduoSolicitud> res = solicitud.getResiduosSolicitud();
        List<ResiduoSolicitud> temp = new ArrayList();
        Residuo r= null;
        for(ResiduoSolicitud rs : res ) {
            if(!rs.getResiduo().getNombre().equalsIgnoreCase(nombre)) {
                temp.add(rs);
            } else {
                r = rs.getResiduo();
            }
        }
        solicitud.setResiduosSolicitud(temp);
        return r;
    }
    
    private void agregaResiduoALaSolicitud() {
        int row = tablaTodos.getSelectedRow();
        
        if(row < 0 ) {
            return;
        }
        
        String n = (String)tablaTodos.getValueAt(row, 0);
        
        Residuo residuo = buscarResiduoNombre(n);
        
        DefaultTableModel dtm = (DefaultTableModel)tablaSelect.getModel();
        dtm.addRow(new Object[]{residuo.getNombre()});
        DefaultTableModel m = (DefaultTableModel)tablaTodos.getModel();
        m.removeRow(row);
        
        
        ResiduoSolicitud rs = new ResiduoSolicitud();
        rs.setResiduo(residuo);
        
        if(solicitud.getResiduosSolicitud() == null) {
            solicitud.setResiduosSolicitud(new ArrayList());
        }
        List<ResiduoSolicitud> lrs = solicitud.getResiduosSolicitud();
        lrs.add(rs);
        
        solicitud.setResiduosSolicitud(lrs);
    }

    private void eliminarResiduoALaSolicitud() {

        int row = tablaSelect.getSelectedRow();
        
        if(row < 0 ) {
            return;
        }
        
        String n = (String)tablaSelect.getValueAt(row, 0);
        
        Residuo residuo = buscarResiduoNombre(n);
        
        DefaultTableModel dtm = (DefaultTableModel)tablaTodos.getModel();
        dtm.addRow(new Object[]{residuo.getNombre()});
        DefaultTableModel m = (DefaultTableModel)tablaSelect.getModel();
        m.removeRow(row);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgrega = new javax.swing.JButton();
        btnQuita = new javax.swing.JButton();
        btnSolicitar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaSelect = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaTodos = new javax.swing.JTable();
        datePicker = new com.github.lgooddatepicker.components.DatePicker();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAgrega.setText("Agrega");
        btnAgrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moverResiduo(evt);
            }
        });

        btnQuita.setText("Quita");
        btnQuita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarResiduo(evt);
            }
        });

        btnSolicitar.setText("Solicitar");
        btnSolicitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectSolicitar(evt);
            }
        });

        jButton1.setText("Salir");

        tablaSelect.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaSelect);
        if (tablaSelect.getColumnModel().getColumnCount() > 0) {
            tablaSelect.getColumnModel().getColumn(0).setResizable(false);
            tablaSelect.getColumnModel().getColumn(2).setResizable(false);
        }

        tablaTodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaTodos);
        if (tablaTodos.getColumnModel().getColumnCount() > 0) {
            tablaTodos.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel1.setText("Fecha");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnQuita, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgrega, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSolicitar)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btnAgrega)
                        .addGap(19, 19, 19)
                        .addComponent(btnQuita))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSolicitar)
                    .addComponent(jButton1)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void moverResiduo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moverResiduo
        agregaResiduoALaSolicitud();
    }//GEN-LAST:event_moverResiduo

    private void setearCantidades() {
        DefaultTableModel dfm = (DefaultTableModel)tablaSelect.getModel();
        List<ResiduoSolicitud> lrs = solicitud.getResiduosSolicitud();
        for(int i = 0; i<tablaSelect.getRowCount(); i++)
        {
            ResiduoSolicitud rs = lrs.get(i);
            try {
                rs.setCantidad(Integer.parseInt((String)dfm.getValueAt(i, 1)));
            } catch (Exception e) {
            }
            
            rs.setTipo((String)dfm.getValueAt(i, 2));
        }
        Calendar c = null;
        if(datePicker.getDate() != null) {
            c = new GregorianCalendar(datePicker.getDate().getYear(),
                    datePicker.getDate().getMonthValue()-1, 
                    datePicker.getDate().getDayOfMonth());
        }
        solicitud.setFechaSalida(c.getTime());
        solicitud.setProductor(new Productor("ITSON"));
    }
    
    private void selectSolicitar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectSolicitar

        ILogica logica = FabricaLogica.crearInstancia();
        setearCantidades();
        
        
        try {
            logica.solicitarTraslado(solicitud);
            muestraMensajeExito("Se agendo la solicitud con exito");
        } catch (MalformedSolicitud ms) {
            mostrarError(ms.getMessage());
        } catch (ExcedeCantidadTrasladoException ect) {
            mostrarError(ect.getMessage());
        } catch (SolicitudExistenteException see) {
            mostrarError(see.getMessage());
        }


    }//GEN-LAST:event_selectSolicitar

    private void eliminarResiduo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarResiduo
        eliminarResiduoALaSolicitud();
    }//GEN-LAST:event_eliminarResiduo
    private void mostrarError(String msg) {
        JOptionPane.showMessageDialog(this, msg, "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    private void muestraMensajeExito(String msg) {
        JOptionPane.showMessageDialog(this, msg, "YUPII", JOptionPane.INFORMATION_MESSAGE);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgrega;
    private javax.swing.JButton btnQuita;
    private javax.swing.JButton btnSolicitar;
    private com.github.lgooddatepicker.components.DatePicker datePicker;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaSelect;
    private javax.swing.JTable tablaTodos;
    // End of variables declaration//GEN-END:variables
}
